1.启动mongo shell,创建管理员账号

认证和授权
Authentication
认证识别，解决我是谁

Authorization
操作授权，我能做什么

进入数据库
use 数据库（name）
查看所在数据库用户
show users

Mongodb的授权采用了角色授权的方法，每个角色包括一组权限。哪个库下面创建用户，这个用户就是哪个库的
admin数据库可以设置各种控制角色，其他自定义数据库只能设置本数据库控制角色
Built-In Roles（内置角色）：
    1. 数据库用户角色：read、readWrite;
    2. 数据库管理角色：dbAdmin、dbOwner、userAdmin；
    3. 集群管理角色：clusterAdmin、clusterManager、clusterMonitor、hostManager；
    4. 备份恢复角色：backup、restore；
    5. 所有数据库角色：readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase
    6. 超级用户角色：root  
    7. 内部角色：__system



超级权限
root: 只在admin数据库中可创建。超级账号，超级权限

集群管理
clusterAdmin: 管理机器的最高权限，只在admin数据库中可创建，赋予用户所有分片和复制集相关函数的集群管理权限。
clusterManager: 管理和监控集群的权限
clusterMonitor: 监控集群的权限
hostManager: 管理Server

夸库角色
readAnyDatabase: 在所有数据库上都有读取数据的权限，只在admin数据库中可创建，赋予用户所有数据库的读权限
readWriteAnyDatabase: 在所有数据库上都有读写数据的权限，只在admin数据库中可创建，赋予用户所有数据库的读写权限
userAdminAnyDatabase: 在所有数据库上都有管理user的权限，只在admin数据库中可创建，赋予用户所有数据库的userAdmin权限
dbAdminAnyDatabase: 管理所有数据库的权限，只在admin数据库中可创建，赋予用户所有数据库的dbAdmin权限。

备份和还原角色
backup
restore

数据库管理角色
dbAdmin: 在当前db中执行管理操作的权限，允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile
dbOwner: 在当前db中执行任意操作
userADmin: 在当前db中管理user的权限，允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户

数据库用户角色
read: 允许用户读取指定数据库
readWrite:允许用户读写指定数据库




2. 创建超级用户（root）
进入admin数据库，只在admin数据库中可创建，超级账号，超级权限

use admin

db.createUser({
  user: 'admin',
  pwd: 'admin',
  roles: [{ role: 'root', db: 'admin'}]
})



3. 创建所有数据库管理用户
use admin

db.createUser({ 
  user: "useradmin", 
  pwd: "1233456", 
  roles: [{ role: "userAdminAnyDatabase", db: "admin" }] 
})


4. 创建单个数据库用户
use goods

db.createUser({ 
  user: "test", 
  pwd: "123456", 
  roles: [{ role: "readWrite", db: "goods" }] 
})



5.重要的一步,启用权限验证

mongo --auth

或者修改mongo.conf，最后一行添加
auth=true


重新启动mongodb
net stop mongodb;
net start mongodb;







